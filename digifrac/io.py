import numpy as np
import os

from subprocess import Popen, PIPE, CalledProcessError


def readVTKB(img_fname):
    img=None
    with open(img_fname, mode='rb') as file:
        for li,line in enumerate(file):
            #Head
            if(li==4): 
                NXYZ=np.array([int(t) for t in line.decode('ascii').split()[1:4]])-1
                NumVoxels=NXYZ[0]*NXYZ[1]*NXYZ[2]
                print("Image Size=",NXYZ,NumVoxels)
            #Raw data
            if(li==10):
                img=np.frombuffer(line,dtype=np.uint8)
                assert len(img)==NXYZ[0]*NXYZ[1]*NXYZ[2], "Wrong Data size %d->%d" % (len(img),NumVoxels)
                print("Image value range=",[np.min(img),np.max(img)])
    
    if(img is not None):
        img_3D=np.array(np.reshape(img,NXYZ,order='F'),dtype=np.uint8)
        return img_3D

def saveVTKB(fname,img):
    header=b""
    header+=b"# vtk DataFile Version 3.0\n"
    header+=b"#Generated by PyGeoMesh\n"
    header+=b"BINARY\n"
    header+=b"DATASET STRUCTURED_POINTS\n"
    header+=b"DIMENSIONS %d %d %d\n" % (img.shape[0],img.shape[1],img.shape[2])
    header+=b"ORIGIN 0 0 0\n" 
    header+=b"SPACING 1 1 1\n" 
    header+=b"POINT_DATA %d\n" %(img.shape[0]*img.shape[1]*img.shape[2]) 
    header+=b"SCALARS voxel_data unsigned_char\n"
    header+=b"LOOKUP_TABLE default\n"
    with open(fname,'wb') as f:
        f.write(header)
        f.write(img.flatten(order="F").tobytes())


def cmd_execute(cmd,line_skipper="|"):
    output_info=""
    with Popen(cmd, stdout=PIPE, bufsize=1, universal_newlines=True) as p:
        for line in p.stdout:
            if(line_skipper not in line):
                print(line, end='') # process line here
                output_info+=line

    if p.returncode != 0:
        raise CalledProcessError(p.returncode, p.args)

    return output_info